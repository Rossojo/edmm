---
# add hosts
<#list hosts as key,value>
- hosts: localhost
  gather_facts: no
  tasks:
    - include_vars:
        file: ${value.name}_host.json
        name: requiredProperties
    - name: Add host
      add_host:
        name: ${value.name}
        ansible_host: '{{requiredProperties.HOSTNAME}}'
        ansible_user: ubuntu
        ansible_ssh_extra_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
        ansible_ssh_private_key_file: ${value.privKeyFile}
        ansible_python_interpreter: /usr/bin/python3
    - name: Wait 600 seconds for target connection to become reachable/usable
      wait_for:
        host: '{{requiredProperties.HOSTNAME}}'
        port: 22
</#list>
  <#list plays as play>
# Play for component ${play.name}
- name: ${play.name}
  <#if play.hosts??>
  hosts: ${play.hosts}
  <#else>
  </#if>
  become: yes
  become_user: root
  <#if play.vars?? && play.vars?size != 0>
  environment:
    <#list play.vars?keys as key>
    ${key}: ${play.vars[key]}
    </#list>
  <#else>
  </#if>
  tasks:
    - include_vars:
        file: ${play.name}_requiredProps.json

        name: requiredProperties
    <#list play.files as file>
    - name: Make sure destination dir exists
      file:
        path:  '{{ "${file.target}" | dirname }}'
        state: directory
    - name: Copy file to remote
      copy:
        src: ${file.src}
        dest: ${file.target}
    </#list>
    <#list play.tasks as task>
    - name: ${task.name}
      script: ${task.script}
      <#if task.args?? && task.args?size != 0>
      args:
      <#list task.args as arg_key,arg_value>
        ${arg_key}: ${arg_value}
      </#list>
      <#else>
      </#if>
      register: hello
      <#if play.runtimeVars?? && play.runtimeVars?size != 0>
      environment:
        <#list play.runtimeVars as var>
        ${var}: '{{requiredProperties.${var}}}'
        </#list>
      <#else>
      </#if>
    - debug: msg="{{ hello.stdout }}"
    </#list>

  </#list>